// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaskTracker.DAL.Context;

namespace TaskTracker.DAL.Migrations
{
    [DbContext(typeof(TaskTrackerContext))]
    partial class TaskTrackerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TaskTracker.DAL.Enitty.AuthClientConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BaseUri");

                    b.Property<string>("ConsumerKey");

                    b.Property<string>("ConsumerSecret");

                    b.Property<string>("Digest");

                    b.Property<string>("Salt");

                    b.Property<int>("UserName");

                    b.HasKey("Id");

                    b.ToTable("AuthClientConfigs");
                });

            modelBuilder.Entity("TaskTracker.DAL.Enitty.AuthType", b =>
                {
                    b.Property<int>("AuthTypeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.HasKey("AuthTypeId");

                    b.ToTable("AuthType");
                });

            modelBuilder.Entity("TaskTracker.DAL.Enitty.UserSession", b =>
                {
                    b.Property<int>("UserSessionId");

                    b.Property<string>("AccessSecret");

                    b.Property<string>("AccessToken");

                    b.Property<int>("AuthTypeId");

                    b.HasKey("UserSessionId");

                    b.HasIndex("AuthTypeId");

                    b.ToTable("UserSessions");
                });

            modelBuilder.Entity("TaskTracker.DAL.Entity.Board", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("Boards");
                });

            modelBuilder.Entity("TaskTracker.DAL.Entity.Member", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<long?>("BoardID");

                    b.Property<string>("EmailAddress");

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.HasIndex("BoardID");

                    b.ToTable("BoardMembers");
                });

            modelBuilder.Entity("TaskTracker.DAL.Entity.Sprint", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EndDate");

                    b.Property<string>("Name");

                    b.Property<DateTime>("StartDate");

                    b.HasKey("ID");

                    b.ToTable("Sprints");
                });

            modelBuilder.Entity("TaskTracker.DAL.Enitty.UserSession", b =>
                {
                    b.HasOne("TaskTracker.DAL.Enitty.AuthType", "AuthType")
                        .WithMany("UserSessions")
                        .HasForeignKey("AuthTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TaskTracker.DAL.Enitty.AuthClientConfig", "AuthClientConfig")
                        .WithMany()
                        .HasForeignKey("UserSessionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaskTracker.DAL.Entity.Member", b =>
                {
                    b.HasOne("TaskTracker.DAL.Entity.Board", "Board")
                        .WithMany()
                        .HasForeignKey("BoardID");
                });
#pragma warning restore 612, 618
        }
    }
}
